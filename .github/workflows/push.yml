name: Python

on: [push]

jobs:
  py-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python3 --version
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade tox
      - name: Test with tox
        run: |
          python3 -m tox -e format-check -e py39-test -e py39-flake8
      - name: Build Python Wheels
        run: |
          python3 -m tox -e py39-build
      - name: Upload built python
        uses: actions/upload-artifact@v2
        with:
          name: app-artifacts 
          path: |
            dist/silver_spork*.whl
            dist/silver-spork*.tar.gz

  py-platform-check:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["8", "9"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 --version
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade tox
      - name: Test with tox
        run: |
          python3 -m tox -e py3${{ matrix.python-version }}-test

  tf-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      
      - uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

